-- Generated using RoadToGlory's Converter v1.1 (RoadToGlory#9879)

-- Instances:

local Converted = {
	["_ScreenGui"] = Instance.new("ScreenGui");
	["_LocalScript"] = Instance.new("LocalScript");
	["_TextButton"] = Instance.new("TextButton");
	["_LocalScript1"] = Instance.new("LocalScript");
	["_UICorner"] = Instance.new("UICorner");
}

-- Properties:

Converted["_ScreenGui"].ResetOnSpawn = false
Converted["_ScreenGui"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Converted["_ScreenGui"].Parent = game:GetService("CoreGui")

Converted["_TextButton"].Font = Enum.Font.Unknown
Converted["_TextButton"].RichText = true
Converted["_TextButton"].Text = "FLY"
Converted["_TextButton"].TextColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextButton"].TextScaled = true
Converted["_TextButton"].TextSize = 14
Converted["_TextButton"].TextWrapped = true
Converted["_TextButton"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextButton"].BorderSizePixel = 0
Converted["_TextButton"].Position = UDim2.new(0.753184676, 0, 0.603015065, 0)
Converted["_TextButton"].Size = UDim2.new(0, 65, 0, 78)
Converted["_TextButton"].Parent = Converted["_ScreenGui"]

Converted["_UICorner"].Parent = Converted["_TextButton"]

-- Fake Module Scripts:

local fake_module_scripts = {}


-- Fake Local Scripts:

local function KWLCV_fake_script() -- Fake Script: StarterGui.ScreenGui.LocalScript
    local script = Instance.new("LocalScript")
    script.Name = "LocalScript"
    script.Parent = Converted["_ScreenGui"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	-- LocalScript in StarterPlayerScripts
	-- Classic Admin-Style Fly with Superhero Pose
	
	local UIS = game:GetService("UserInputService")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	
	local player = Players.LocalPlayer
	local function getChar()
		local char = player.Character or player.CharacterAdded:Wait()
		return char, char:WaitForChild("Humanoid"), char:WaitForChild("HumanoidRootPart")
	end
	
	local character, humanoid, root = getChar()
	local flying = false
	local speed = 60
	local bv, bg
	local originals = {}
	
	-- Superhero pose
	local function setSuperheroPose()
		local rShoulder = character:FindFirstChild("Right Shoulder", true)
		local lHip = character:FindFirstChild("Left Hip", true)
	
		if rShoulder and not originals[rShoulder] then
			originals[rShoulder] = rShoulder.C0
			rShoulder.C0 = rShoulder.C0 * CFrame.Angles(-1.5, 0, 0) -- arm forward
		end
	
		if lHip and not originals[lHip] then
			originals[lHip] = lHip.C0
			lHip.C0 = lHip.C0 * CFrame.Angles(0.5, 0, 0) -- leg bent
		end
	end
	
	local function resetPose()
		for joint, c0 in pairs(originals) do
			if joint then joint.C0 = c0 end
		end
		originals = {}
	end
	
	-- Start flying
	local function startFly()
		if flying then return end
		flying = true
		humanoid.PlatformStand = true
		setSuperheroPose()
	
		-- Body movers to override physics
		bv = Instance.new("BodyVelocity")
		bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
		bv.Velocity = Vector3.zero
		bv.Parent = root
	
		bg = Instance.new("BodyGyro")
		bg.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
		bg.P = 1e5
		bg.CFrame = root.CFrame
		bg.Parent = root
	
		-- Update loop
		RunService.RenderStepped:Connect(function()
			if not flying then return end
	
			local cam = workspace.CurrentCamera
			local cf = cam.CFrame
			local move = Vector3.zero
	
			-- WASD movement relative to camera
			if UIS:IsKeyDown(Enum.KeyCode.W) then move += cf.LookVector end
			if UIS:IsKeyDown(Enum.KeyCode.S) then move -= cf.LookVector end
			if UIS:IsKeyDown(Enum.KeyCode.A) then move -= cf.RightVector end
			if UIS:IsKeyDown(Enum.KeyCode.D) then move += cf.RightVector end
			if UIS:IsKeyDown(Enum.KeyCode.Space) then move += Vector3.new(0,1,0) end
			if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then move += Vector3.new(0,-1,0) end
	
			-- Hover when idle
			if move.Magnitude > 0 then
				move = move.Unit * speed
			else
				move = Vector3.zero
			end
	
			bv.Velocity = move
			bg.CFrame = CFrame.lookAt(root.Position, root.Position + cf.LookVector) -- face camera
		end)
	end
	
	-- Stop flying
	local function stopFly()
		if not flying then return end
		flying = false
		humanoid.PlatformStand = false
		if bv then bv:Destroy() bv = nil end
		if bg then bg:Destroy() bg = nil end
		resetPose()
	end
	
	-- Toggle with F
	UIS.InputBegan:Connect(function(input, gp)
		if gp then return end
		if input.KeyCode == Enum.KeyCode.F then
			if flying then stopFly() else startFly() end
		end
	end)
	
	-- Reset if respawn
	player.CharacterAdded:Connect(function()
		character, humanoid, root = getChar()
		stopFly()
	end)
	
end
local function STKJZVI_fake_script() -- Fake Script: StarterGui.ScreenGui.TextButton.LocalScript
    local script = Instance.new("LocalScript")
    script.Name = "LocalScript"
    script.Parent = Converted["_TextButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	-- LocalScript inside ScreenGui or TextButton
	local UIS = game:GetService("UserInputService")
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	
	local flyButton = script.Parent  -- The TextButton
	local character, humanoid, root
	local flying = false
	local bv, bg
	local speed = 60
	local originals = {}
	
	-- Function to get character
	local function getChar()
		character = player.Character or player.CharacterAdded:Wait()
		humanoid = character:WaitForChild("Humanoid")
		root = character:WaitForChild("HumanoidRootPart")
	end
	getChar()
	
	-- Superhero pose
	local function setSuperheroPose()
		local rShoulder = character:FindFirstChild("Right Shoulder", true)
		local lHip = character:FindFirstChild("Left Hip", true)
		if rShoulder and not originals[rShoulder] then
			originals[rShoulder] = rShoulder.C0
			rShoulder.C0 = rShoulder.C0 * CFrame.Angles(-1.5,0,0)
		end
		if lHip and not originals[lHip] then
			originals[lHip] = lHip.C0
			lHip.C0 = lHip.C0 * CFrame.Angles(0.5,0,0)
		end
	end
	
	local function resetPose()
		for joint, c0 in pairs(originals) do
			if joint then joint.C0 = c0 end
		end
		originals = {}
	end
	
	-- Start fly
	local function startFly()
		if flying then return end
		flying = true
		humanoid.PlatformStand = true
		setSuperheroPose()
	
		bv = Instance.new("BodyVelocity")
		bv.MaxForce = Vector3.new(1e5,1e5,1e5)
		bv.Velocity = Vector3.zero
		bv.Parent = root
	
		bg = Instance.new("BodyGyro")
		bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
		bg.P = 1e5
		bg.CFrame = root.CFrame
		bg.Parent = root
	
		RunService.RenderStepped:Connect(function()
			if not flying then return end
			local cam = workspace.CurrentCamera
			local cf = cam.CFrame
			local move = Vector3.zero
	
			if UIS:IsKeyDown(Enum.KeyCode.W) then move += cf.LookVector end
			if UIS:IsKeyDown(Enum.KeyCode.S) then move -= cf.LookVector end
			if UIS:IsKeyDown(Enum.KeyCode.A) then move -= cf.RightVector end
			if UIS:IsKeyDown(Enum.KeyCode.D) then move += cf.RightVector end
			if UIS:IsKeyDown(Enum.KeyCode.Space) then move += Vector3.new(0,1,0) end
			if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then move += Vector3.new(0,-1,0) end
	
			if move.Magnitude > 0 then move = move.Unit * speed else move = Vector3.zero end
	
			bv.Velocity = move
			bg.CFrame = CFrame.lookAt(root.Position, root.Position + cf.LookVector)
		end)
	end
	
	-- Stop fly
	local function stopFly()
		if not flying then return end
		flying = false
		humanoid.PlatformStand = false
		if bv then bv:Destroy() bv = nil end
		if bg then bg:Destroy() bg = nil end
		resetPose()
	end
	
	-- Toggle fly
	local function toggleFly()
		if flying then stopFly() else startFly() end
	end
	
	-- Connect TextButton
	flyButton.MouseButton1Click:Connect(toggleFly)
	
	-- Optional: also allow F key
	UIS.InputBegan:Connect(function(input, gp)
		if gp then return end
		if input.KeyCode == Enum.KeyCode.F then toggleFly() end
	end)
	
	-- Reset on respawn
	player.CharacterAdded:Connect(function()
		getChar()
		stopFly()
	end)
	
end
