local ScreenGui = Instance.new("ScreenGui")
local TextButton = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

TextButton.Parent = ScreenGui
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.753184676, 0, 0.603015065, 0)
TextButton.Size = UDim2.new(0, 65, 0, 78)
TextButton.Font = Enum.Font.Unknown
TextButton.Text = "FLY"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true

UICorner.Parent = TextButton

-- Scripts:

local function AZQKYY_fake_script() -- TextButton.LocalScript 
	local script = Instance.new('LocalScript', TextButton)

	-- LocalScript inside ScreenGui or TextButton
	local UIS = game:GetService("UserInputService")
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	
	local flyButton = script.Parent  -- The TextButton
	local character, humanoid, root
	local flying = false
	local bv, bg
	local speed = 60
	local originals = {}
	
	-- Function to get character
	local function getChar()
		character = player.Character or player.CharacterAdded:Wait()
		humanoid = character:WaitForChild("Humanoid")
		root = character:WaitForChild("HumanoidRootPart")
	end
	getChar()
	
	-- Superhero pose
	local function setSuperheroPose()
		local rShoulder = character:FindFirstChild("Right Shoulder", true)
		local lHip = character:FindFirstChild("Left Hip", true)
		if rShoulder and not originals[rShoulder] then
			originals[rShoulder] = rShoulder.C0
			rShoulder.C0 = rShoulder.C0 * CFrame.Angles(-1.5,0,0)
		end
		if lHip and not originals[lHip] then
			originals[lHip] = lHip.C0
			lHip.C0 = lHip.C0 * CFrame.Angles(0.5,0,0)
		end
	end
	
	local function resetPose()
		for joint, c0 in pairs(originals) do
			if joint then joint.C0 = c0 end
		end
		originals = {}
	end
	
	-- Start fly
	local function startFly()
		if flying then return end
		flying = true
		humanoid.PlatformStand = true
		setSuperheroPose()
	
		bv = Instance.new("BodyVelocity")
		bv.MaxForce = Vector3.new(1e5,1e5,1e5)
		bv.Velocity = Vector3.zero
		bv.Parent = root
	
		bg = Instance.new("BodyGyro")
		bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
		bg.P = 1e5
		bg.CFrame = root.CFrame
		bg.Parent = root
	
		RunService.RenderStepped:Connect(function()
			if not flying then return end
			local cam = workspace.CurrentCamera
			local cf = cam.CFrame
			local move = Vector3.zero
	
			if UIS:IsKeyDown(Enum.KeyCode.W) then move += cf.LookVector end
			if UIS:IsKeyDown(Enum.KeyCode.S) then move -= cf.LookVector end
			if UIS:IsKeyDown(Enum.KeyCode.A) then move -= cf.RightVector end
			if UIS:IsKeyDown(Enum.KeyCode.D) then move += cf.RightVector end
			if UIS:IsKeyDown(Enum.KeyCode.Space) then move += Vector3.new(0,1,0) end
			if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then move += Vector3.new(0,-1,0) end
	
			if move.Magnitude > 0 then move = move.Unit * speed else move = Vector3.zero end
	
			bv.Velocity = move
			bg.CFrame = CFrame.lookAt(root.Position, root.Position + cf.LookVector)
		end)
	end
	
	-- Stop fly
	local function stopFly()
		if not flying then return end
		flying = false
		humanoid.PlatformStand = false
		if bv then bv:Destroy() bv = nil end
		if bg then bg:Destroy() bg = nil end
		resetPose()
	end
	
	-- Toggle fly
	local function toggleFly()
		if flying then stopFly() else startFly() end
	end
	
	-- Connect TextButton
	flyButton.MouseButton1Click:Connect(toggleFly)
	
	-- Optional: also allow F key
	UIS.InputBegan:Connect(function(input, gp)
		if gp then return end
		if input.KeyCode == Enum.KeyCode.F then toggleFly() end
	end)
	
	-- Reset on respawn
	player.CharacterAdded:Connect(function()
		getChar()
		stopFly()
	end)
	
end
